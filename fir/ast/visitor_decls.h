
// AUTOMATICALLY GENERATED BY CDK -- DO NOT EDIT
#include <cdk/ast/visitor_decls.h>

#ifdef __IN_VISITOR_HEADER__
#ifdef __PURE_VIRTUAL_DECLARATIONS_ONLY__
  virtual void do_address_of_node(fir::address_of_node *const node, int lvl) = 0;
  virtual void do_alloc_node(fir::alloc_node *const node, int lvl) = 0;
  virtual void do_block_node(fir::block_node *const node, int lvl) = 0;
  virtual void do_declaration_variable_node(fir::declaration_variable_node *const node, int lvl) = 0;
  virtual void do_evaluation_node(fir::evaluation_node *const node, int lvl) = 0;
  virtual void do_function_call_node(fir::function_call_node *const node, int lvl) = 0;
  virtual void do_function_declaration_node(fir::function_declaration_node *const node, int lvl) = 0;
  virtual void do_function_definition_node(fir::function_definition_node *const node, int lvl) = 0;
  virtual void do_identify_node(fir::identify_node *const node, int lvl) = 0;
  virtual void do_if_else_node(fir::if_else_node *const node, int lvl) = 0;
  virtual void do_if_node(fir::if_node *const node, int lvl) = 0;
  virtual void do_leave_node(fir::leave_node *const node, int lvl) = 0;
  virtual void do_null_pointer_node(fir::null_pointer_node *const node, int lvl) = 0;
  virtual void do_pointer_node(fir::pointer_node *const node, int lvl) = 0;
  virtual void do_read_node(fir::read_node *const node, int lvl) = 0;
  virtual void do_restart_node(fir::restart_node *const node, int lvl) = 0;
  virtual void do_return_node(fir::return_node *const node, int lvl) = 0;
  virtual void do_size_of_node(fir::size_of_node *const node, int lvl) = 0;
  virtual void do_while_finally_node(fir::while_finally_node *const node, int lvl) = 0;
  virtual void do_while_node(fir::while_node *const node, int lvl) = 0;
  virtual void do_write_node(fir::write_node *const node, int lvl) = 0;

#else
  void do_address_of_node(fir::address_of_node *const node, int lvl);
  void do_alloc_node(fir::alloc_node *const node, int lvl);
  void do_block_node(fir::block_node *const node, int lvl);
  void do_declaration_variable_node(fir::declaration_variable_node *const node, int lvl);
  void do_evaluation_node(fir::evaluation_node *const node, int lvl);
  void do_function_call_node(fir::function_call_node *const node, int lvl);
  void do_function_declaration_node(fir::function_declaration_node *const node, int lvl);
  void do_function_definition_node(fir::function_definition_node *const node, int lvl);
  void do_identify_node(fir::identify_node *const node, int lvl);
  void do_if_else_node(fir::if_else_node *const node, int lvl);
  void do_if_node(fir::if_node *const node, int lvl);
  void do_leave_node(fir::leave_node *const node, int lvl);
  void do_null_pointer_node(fir::null_pointer_node *const node, int lvl);
  void do_pointer_node(fir::pointer_node *const node, int lvl);
  void do_read_node(fir::read_node *const node, int lvl);
  void do_restart_node(fir::restart_node *const node, int lvl);
  void do_return_node(fir::return_node *const node, int lvl);
  void do_size_of_node(fir::size_of_node *const node, int lvl);
  void do_while_finally_node(fir::while_finally_node *const node, int lvl);
  void do_while_node(fir::while_node *const node, int lvl);
  void do_write_node(fir::write_node *const node, int lvl);

#endif /* !defined(__PURE_VIRTUAL_DECLARATIONS_ONLY__) */
#endif /* __IN_VISITOR_HEADER__ */

